<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Callnumbers on Robot Librarian</title>
    <link>http://robotlibrarian.billdueber.com/tags/callnumbers/</link>
    <description>Recent content in Callnumbers on Robot Librarian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Nov 2008 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://robotlibrarian.billdueber.com/tags/callnumbers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Normalizing LoC Call Numbers for sorting</title>
      <link>http://robotlibrarian.billdueber.com/2008/11/normalizing-loc-call-numbers-for-sorting/</link>
      <pubDate>Thu, 13 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>http://robotlibrarian.billdueber.com/2008/11/normalizing-loc-call-numbers-for-sorting/</guid>
      <description>Updated: I missed a &amp;lsquo;?&amp;rsquo; in the original code that pushed a single cutter into the second-cutter position. Fixed below.
Crap. Update 2: Initial letters can be three characters long. Regexp and output changed.
LoC Call numbers tend to be a mess, and I&amp;rsquo;ve been working this morning trying to normalize them for easy string comparison.
The perl function below takes a call number (with some level of sloppiness) and returns a string suitable for comparisons with other strings returned by the function.</description>
    </item>
    
  </channel>
</rss>